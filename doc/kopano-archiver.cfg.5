.TH "KOPANO\-ARCHIVER.CFG" "5" "November 2016" "Kopano 8" "Kopano Core user reference"
.\" http://bugs.debian.org/507673
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.SH "NAME"
kopano-archiver.cfg \- The Kopano archiver configuration file
.SH "SYNOPSIS"
.PP
\fBarchiver.cfg\fR
.SH "DESCRIPTION"
.PP
The
archiver.cfg
is a configuration file for the Kopano Archiver.
archiver.cfg
contains instructions for the software to set up the logging system and specific actions the archiver can do.
.SH "FILE FORMAT"
.PP
The file consists of one big section, but parameters can be grouped by functionality.
.PP
The parameters are written in the form:
.PP
\fBname\fR
=
\fIvalue\fR
.PP
The file is line\-based. Each newline\-terminated line represents either a comment, nothing, a parameter or a directive. A line beginning with \fB#\fP is considered a comment, and will be ignored by Kopano. Parameter names are case sensitive. Lines beginning with \fB!\fP are directives.
.PP
Directives are written in the form:
.PP
!\fBdirective\fR
\fI[argument(s)] \fR
.PP
The following directives exist:
.PP
\fBinclude\fR
.RS 4
Include and process
\fIargument\fR
.PP
Example: !include common.cfg
.RE
.SH "EXPLANATION OF EACH PARAMETER"
.SS server_socket
.PP
Unix socket to find the connection to the Kopano server.
.PP
Default:
\fIfile:///var/run/kopano/server.sock\fR
.SS sslkey_file
.PP
Use this file as key to logon to the server. This is only used when server_socket is set to an HTTPS transport. See the
\fBkopano-server\fR(8)
manual page on how to setup SSL keys.
.PP
Default: value not set.
.SS sslkey_pass
.PP
The password of the SSL key file that is set in sslkey_file.
.PP
Default: value not set.
.SS archive_enable
.PP
Specifies if the archive step will be performed. The archive step is basically the copy to the archive.
.PP
Default:
\fIyes\fR
.SS archive_after
.PP
Specifies the age in days of a message before it will be archived.
.PP
Default:
\fI30\fR
.SS stub_enable
.PP
Specifies if the stub step will be performed. Stubbing is the process of removing the data from a message and only leaving a reference to one or more archived versions of that message. When such a message is opened it will be de\-stubbed on the fly, leaving the user with a normal message to work with.
.PP
A message will never be stubbed if it is not yet archived.
.PP
Default:
\fIno\fR
.SS stub_unread
.PP
Specifies if unread messages will be stubbed.
.PP
Default:
\fIno\fR
.SS stub_after
.PP
Specifies the age in days of a message before it will be stubbed.
.PP
Default:
\fI0\fR
.SS delete_enable
.PP
Specifies if the delete step will be performed. The delete step deletes messages from the users store if they are old enough. This way even more space is freed.
.PP
A message will never be deleted if it is not yet archived.
.PP
A message will never be deleted from the archive.
.PP
Default:
\fIno\fR
.SS delete_unread
.PP
Specifies if unread messages will be deleted.
.PP
Default:
\fIno\fR
.SS delete_after
.PP
Specifies the age in days of a message before it will be deleted.
.PP
Default:
\fI0\fR
.SS purge_enable
.PP
Specifies if message will be purged from the archive after a certain amount of time.
.PP
Default:
\fIno\fR
.SS purge_after
.PP
Specifies the age in days of a message before it will be purged. *Note that the age is measured from the time it was originally delivered in the primay store.
.PP
Default:
\fI0\fR
.SS track_history
.PP
Specifies the behaviour of the archiver when re\-archiving messages that were changed after they were archived. When track_history is set to no, the archived version will be updated to contain the most actual information. When track_history is set to yes, a new copy of the message will be created in the archive, and the previous version is linked to it. This way the change history can be tracked.
.PP
Default:
\fIno\fR
.SS cleanup_action
.PP
Specify what action should be taken on archive messages whose primary message has been deleted. The options are \fBstore\fP and \fBdelete\fP, meaning store the archived message in a special "Deleted" folder or delete the archived messages respectively.
.PP
Default:
\fIstore\fR
.SS cleanup_follow_purge_after
.PP
Specify if items that are cleaned up from the archive are at least the age that is specified in the purge_after setting. This is to avoid messages being deleted from the archive when they where deleted from the primary store by a delete operation. Note that setting to yes, will cause a cleanup run to seemingly do nothing. A rule of thumb is to set this to the same value as delete_enable. So when delete_enable is set to yes, make sure cleanup_follow_purge_after is also set to yes.
.PP
Default:
\fIno\fR
.SS enable_auto_attach
.PP
Specify whether on each archive run an auto\-attach run is performed in order to match the attached archives to the requested state as specified in LDAP or ADS.
.PP
Default:
\fIno\fR
.SS auto_attach_writable
.PP
Specify whether an auto attached archive will be granted write permissions for the user it is attached to.
.PP
Default:
\fIyes\fR
.SS log_method
.PP
The method which should be used for logging. Valid values are:
.TP
\fBsyslog\fR
Use the syslog service. Messages will be sent using the "mail" facility tag. See also
\fBjournald.conf\fP(5) or \fBsyslog.conf\fP(5).
.TP
\fBfile\fP
Log to a file. The filename will be specified in
\fBlog_file\fR.
.TP
\fBauto\fP
Autoselect mode: If \fBlog_file\fP is set, that will be used.
Else, syslog will be used if it looks like it is available.
Else, stderr.
.PP
Default: \fIauto\fP
.SS log_file
.PP
When logging to a file, specify the filename in this parameter. Use
\fB\-\fP
(minus sign) for stderr output.
.PP
Default:
\fI\-\fR
.SS log_timestamp
.PP
Specify whether to prefix each log line with a timestamp in "file" logging mode.
.PP
Default:
\fI1\fR
.SS log_buffer_size
.PP
Buffer logging in what sized blocks. The special value 0 selects line buffering.
.PP
Default:
\fI0\fR
.SS log_level
.PP
The level of output for logging in the range from 0 to 6. "0" means no logging,
"1" for critical messages only, "2" for error or worse, "3" for warning or
worse, "4" for notice or worse, "5" for info or worse, "6" debug.
.PP
Default:
\fI3\fP
.SS pid_file
.PP
The location of the pid file used to guarantee only one instance of kopano\-archiver is running in non\-administrative mode.
.PP
Default:
\fI/var/run/kopano/archiver.pid \fR
.RE
.SH "EXPLANATION OF THE MYSQL SETTINGS PARAMETERS"
.SS mysql_host
.PP
The hostname of the MySQL server to use.
.PP
Default:
\fIlocalhost\fR
.SS mysql_port
.PP
The port of the MySQL server to use.
.PP
Default:
\fI3306\fR
.SS mysql_user
.PP
The user under which we connect with MySQL.
.PP
Default:
\fIroot\fR
.SS mysql_password
.PP
The password to use for MySQL. Leave empty for no password.
.PP
Default:
.SS mysql_socket
.PP
The socket of the MySQL server to use. This option can be used to override the default mysql socket. To use the socket, the mysql_host value must be empty or \fBlocalhost\fP.
.PP
Default:
.SS mysql_database
.PP
The MySQL database to connect to.
.PP
Default:
\fIkopano\fR
.RE
.SS mysql_engine
.PP
The MySQL engine to use. By default, this is InnoDB, which is the only
officially supported database engine. Because Kopano Groupware Core relies on
transactions, it is not advised to use a non-transactional engine such as
MyISAM, Aria, etc.
.PP
Default: \fIInnoDB\fP
.SH "FILES"
.PP
/etc/kopano/archiver.cfg
.RS 4
The Kopano archiver configuration file.
.RE
.SH "SEE ALSO"
.PP
\fBkopano-archiver\fR(8)
